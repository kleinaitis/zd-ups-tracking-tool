name: Deploy Solution

on:
  push:
    branches: [main]
  workflow_dispatch:

jobs:
  publish_lambda_function:
    name: Publish and Deploy
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, and push image to Amazon ECR
        id: build-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: ${{ secrets.ECR_REPOSITORY }}
          ZENDESK_CREDENTIALS: ${{ secrets.ZENDESK_CREDENTIALS }}
          ZENDESK_SUBDOMAIN: ${{ secrets.ZENDESK_SUBDOMAIN }}
          CUSTOM_FIELD_ID: ${{ secrets.CUSTOM_FIELD_ID }}
          CUSTOM_FIELD_QUERY: ${{ secrets.CUSTOM_FIELD_QUERY }}
          UPS_CLIENT_ID: ${{ secrets.UPS_CLIENT_ID }}
          UPS_CLIENT_SECRET: ${{ secrets.UPS_CLIENT_SECRET }}
        run: |
          echo "ZENDESK_CREDENTIALS=$ZENDESK_CREDENTIALS" >> .env
          echo "ZENDESK_SUBDOMAIN=$ZENDESK_SUBDOMAIN" >> .env
          echo "CUSTOM_FIELD_ID=$CUSTOM_FIELD_ID" >> .env
          echo "CUSTOM_FIELD_QUERY=$CUSTOM_FIELD_QUERY" >> .env
          echo "UPS_CLIENT_ID=$UPS_CLIENT_ID" >> .env
          echo "UPS_CLIENT_SECRET=$UPS_CLIENT_SECRET" >> .env 
          
          docker build -f ./Dockerfile -t $ECR_REGISTRY/$ECR_REPOSITORY .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY

      - name: Update Lambda function with latest ECR image
        env:
          LAMBDA_NAME: ${{ secrets.LAMBDA_NAME }}
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: ${{ secrets.ECR_REPOSITORY   }}
          IMAGE_TAG: latest
        run: |
          aws lambda update-function-code \
          --function-name $LAMBDA_NAME \
          --image-uri $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
